services:
  # S3 compatible storage (MinIO)
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: lcdjminio
      MINIO_ROOT_PASSWORD: lcdjminiosecret
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'   # S3 API
      - '9001:9001'   # Web console
    volumes:
      - ./minio-data:/data

  # Initialize bucket using MinIO Client (mc)
  minio-setup:
    image: minio/mc:latest
    container_name: minio-setup
    depends_on:
      - minio
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      until (mc alias set local http://minio:9000 lcdjminio lcdjminiosecret); do echo 'waiting for minio...'; sleep 2; done; 
      mc mb -p local/lcdj-news || true; 
      mc anonymous set download local/lcdj-news || true; 
      # Create default prefixes by uploading placeholder files
      mkdir -p /tmp/init && touch /tmp/init/.keep; 
      mc cp /tmp/init/.keep local/lcdj-news/News/.keep || true; 
      mc cp /tmp/init/.keep local/lcdj-news/Partners/.keep || true; 
      echo 'MinIO bucket and default folders initialized'; 
      "
    restart: 'no'

  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: lcdj-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: lcdj
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio-data:
